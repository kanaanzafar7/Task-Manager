//
//  LoginInteractor.swift
//  clean swift experiments
//
//  Created by Kanaan Zafar on 20/08/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
    func doSomething(request: Login.Something.Request)
    func doLogin (request: Login.Login.Request)
    
}

protocol LoginDataStore
{
    //  var name: String { get set }
    var email: String {get set}
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
    var email = ""
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: Login.Something.Request)
    {
        worker = LoginWorker()
        worker?.doSomeWork()
        
        let response = Login.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func doLogin (request: Login.Login.Request){
        //
        worker = LoginWorker()
        worker?.doSignIn(request: request, completion: { name, loginError in
            let response = Login.Login.Response(name: name, error: loginError)
            self.presenter?.loginCompleted(response: response)
        })
    }
    
    //   func onCompletion
}
