//
//  HomeInteractor.swift
//  clean swift experiments
//
//  Created by Kanaan Zafar on 20/08/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic
{
    func doSomething(request: Home.Something.Request)
    func fetchTasksList()
    func signOutUser()
    func askPermission()
    func deleteTask(taskId : String)
}

protocol HomeDataStore
{
    var name: String { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore
{
    func fetchTasksList() {
        worker = HomeWorker()
        worker?.fetchTasksList(completion: { tasksList, error in
            let response = Home.FetchTasksList.Response(tasksList: tasksList, error: error)
            self.presenter?.tasksFetchingComplete(response: response)
            
        })
    }
    
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: Home.Something.Request)
    {
        worker = HomeWorker()
        worker?.doSomeWork()
        
        let response = Home.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func signOutUser() {
        //        worker =
        worker = HomeWorker()
        worker?.signOutUser(completion: { error in
            //            if let _ = error {
            //
            //            }
            let response = Home.SignOutUser.Response(error: error)
            self.presenter?.signOutRequestCompleted(response: response)
        })
    }
    func askPermission() {
        worker = HomeWorker()
        worker?.permissionForNotifications()
    }
    func deleteTask(taskId: String) {
        worker = HomeWorker()
        let request = Home.DeleteTask.Request(taskId: taskId)
        worker?.deleteTask(request: request, completion: { deletionError in
            let response = Home.DeleteTask.Response(error: deletionError)
            self.presenter?.taskDeletionComplete(response: response)
        })
    }
}
